# Environment variables declared in this file are automatically made available to Prisma.
# See the documentation for more detail: https://pris.ly/d/prisma-schema#accessing-environment-variables-from-the-schema

# Prisma supports the native connection string format for PostgreSQL, MySQL, SQLite, SQL Server, MongoDB and CockroachDB.
# See the documentation for all the connection string options: https://pris.ly/d/connection-strings

# 8soif2quy080aq65s6nj
# pscale_pw_ULjf4AuvvpnsDQ4zleJmVW7HN8uzHzLaDuPNRxaJI6t
# DATABASE_URL='mysql://8soif2quy080aq65s6nj:pscale_pw_ULjf4AuvvpnsDQ4zleJmVW7HN8uzHzLaDuPNRxaJI6t@aws.connect.psdb.cloud/horizons-unbound?ssl={"rejectUnauthorized":true}'
DATABASE_URL='mysql://8soif2quy080aq65s6nj:pscale_pw_ULjf4AuvvpnsDQ4zleJmVW7HN8uzHzLaDuPNRxaJI6t@aws.connect.psdb.cloud/horizons-unbound?sslaccept=strict'


# require('dotenv').config()
# const mysql = require('mysql2')
# const connection = mysql.createConnection(process.env.DATABASE_URL)
# console.log('Connected to PlanetScale!')
# connection.end()

# npm install dotenv mysql2

# pscale shell horizons-unbound main

# DATABASE_HOST=aws.connect.psdb.cloud
# DATABASE_USERNAME=8soif2quy080aq65s6nj
# DATABASE_PASSWORD=pscale_pw_ULjf4AuvvpnsDQ4zleJmVW7HN8uzHzLaDuPNRxaJI6t

# npm install dotenv @planetscale/database

# import 'dotenv/config'
# import { connect } from '@planetscale/database'

# const config = {
#   host: process.env.DATABASE_HOST,
#   username: process.env.DATABASE_USERNAME,
#   password: process.env.DATABASE_PASSWORD
# }

# const conn = connect(config)
# const results = await conn.execute('select 1 from dual where 1=?', [1])



# generator client {
#   provider = "prisma-client-js"
# }
# datasource db {
#   provider = "mysql"
#   url = env("DATABASE_URL")
#   relationMode = "prisma"
# }